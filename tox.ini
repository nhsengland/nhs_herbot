[tox]
envlist = py39, py310, py311, py312, lint, type-check
isolated_build = true
skip_missing_interpreters = true

[testenv]
description = Run unit tests with pytest
deps = 
    pytest
    pytest-cov
    pytest-mock
    pytest-xdist
extras = 
    test
commands = pytest tests/unittests/ -v --cov=nhs_herbot --cov-report=term-missing

[testenv:lint]
description = Run linting with flake8 and black
deps = 
    black
    flake8
    isort
commands = 
    black --check --diff nhs_herbot/ tests/
    isort --check-only --diff nhs_herbot/ tests/
    flake8 nhs_herbot/ tests/

[testenv:format]
description = Format code with black and isort
deps = 
    black
    isort
commands = 
    black nhs_herbot/ tests/
    isort nhs_herbot/ tests/

[testenv:type-check]
description = Run type checking with mypy
deps = 
    mypy
    types-requests
    pandas-stubs
    types-tqdm
commands = mypy nhs_herbot/

[testenv:py39]
basepython = python3.9

[testenv:py310]
basepython = python3.10

[testenv:py311]
basepython = python3.11

[testenv:py312]
basepython = python3.12

[testenv:docs]
description = Build documentation
deps = 
    mkdocs
    mkdocs-material
changedir = docs
commands = mkdocs build

[testenv:docs-serve]
description = Serve documentation locally
deps = 
    mkdocs
    mkdocs-material
changedir = docs
commands = mkdocs serve

[gh-actions]
python =
    3.9: py39
    3.10: py310
    3.11: py311
    3.12: py312

[flake8]
ignore = E731,E266,E501,C901,W503
max-line-length = 99
exclude = .git,notebooks,references,models,data,.tox,.venv

[coverage:run]
source = nhs_herbot
omit = 
    */tests/*
    */conftest.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod
